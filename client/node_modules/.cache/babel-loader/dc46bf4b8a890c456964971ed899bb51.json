{"ast":null,"code":"import React from'react';import'../styles/Shelf.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Shelf=function Shelf(_ref){var name=_ref.name,items=_ref.items;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"shelfName\",children:name}),/*#__PURE__*/_jsx(\"img\",{src:\"../media/wood.png\",alt:\"shelf\"})]});};export default Shelf;// const elemPrefix = \"test\";\n// const getId = (index: number) => `${elemPrefix}${index}`;\n// const getItems = () =>\n//   Array(20)\n//     .fill(0)\n//     .map((_, ind) => ({ id: getId(ind) }));\n// function App() {\n//   const [items] = React.useState(getItems);\n//   // NOTE: for drag by mouse\n//   const { dragStart, dragStop, dragMove, dragging } = useDrag();\n//   const handleDrag = ({ scrollContainer }: scrollVisibilityApiType) => (\n//     ev: React.MouseEvent\n//   ) =>\n//     dragMove(ev, (posDiff) => {\n//       if (scrollContainer.current) {\n//         scrollContainer.current.scrollLeft += posDiff;\n//       }\n//     });\n//   const [selected, setSelected] = React.useState<string>(\"\");\n//   const handleItemClick = (itemId: string) => () => {\n//     if (dragging) {\n//       return false;\n//     }\n//     setSelected(selected !== itemId ? itemId : \"\");\n//   };\n//   return (\n//     <>\n//       <Header />\n//       <div className=\"example\" style={{ paddingTop: \"100px\" }}>\n//         <div onMouseLeave={dragStop}>\n//           <ScrollMenu\n//             // LeftArrow={LeftArrow}\n//             // RightArrow={RightArrow}\n//             // onWheel={onWheel}\n//             onMouseDown={() => dragStart}\n//             onMouseUp={() => dragStop}\n//             onMouseMove={handleDrag}\n//           >\n//             {items.map(({ id }) => (\n//               <Card\n//                 title={id}\n//                 itemId={id} // NOTE: itemId is required for track items\n//                 key={id}\n//                 onClick={handleItemClick(id)}\n//                 selected={id === selected}\n//               />\n//             ))}\n//           </ScrollMenu>\n//         </div>\n//         <Footer />\n//       </div>\n//     </>\n//   );\n// }","map":{"version":3,"names":["React","Shelf","name","items"],"sources":["/Users/erinxu/Developer/react/college-food-insecurity/client/src/components/Shelf.tsx"],"sourcesContent":["import React from 'react';\nimport '../styles/Shelf.scss';\nimport Tile from './Tile';\nimport { ScrollMenu, VisibilityContext } from 'react-horizontal-scrolling-menu';\nimport useDrag from '../components/Drag'\n\ntype scrollVisibilityApiType = React.ContextType<typeof VisibilityContext>;\ntype item = {\n    name: string, \n    location: string, \n    date: string, \n    time: string, \n    restrict: string[], \n    person: string, \n    contact: string, \n    category: string\n}\n\n\nconst Shelf = (\n    {name, items} :\n    {name: string; items: item[]}\n) => {\n    return (\n        <div>\n            <p className='shelfName'>{name}</p>\n\n            <img src='../media/wood.png' alt='shelf'/>\n            \n        </div>\n    )\n}\n\nexport default Shelf\n\n// const elemPrefix = \"test\";\n// const getId = (index: number) => `${elemPrefix}${index}`;\n\n// const getItems = () =>\n//   Array(20)\n//     .fill(0)\n//     .map((_, ind) => ({ id: getId(ind) }));\n\n// function App() {\n//   const [items] = React.useState(getItems);\n\n//   // NOTE: for drag by mouse\n//   const { dragStart, dragStop, dragMove, dragging } = useDrag();\n//   const handleDrag = ({ scrollContainer }: scrollVisibilityApiType) => (\n//     ev: React.MouseEvent\n//   ) =>\n//     dragMove(ev, (posDiff) => {\n//       if (scrollContainer.current) {\n//         scrollContainer.current.scrollLeft += posDiff;\n//       }\n//     });\n\n//   const [selected, setSelected] = React.useState<string>(\"\");\n//   const handleItemClick = (itemId: string) => () => {\n//     if (dragging) {\n//       return false;\n//     }\n//     setSelected(selected !== itemId ? itemId : \"\");\n//   };\n\n//   return (\n//     <>\n//       <Header />\n//       <div className=\"example\" style={{ paddingTop: \"100px\" }}>\n//         <div onMouseLeave={dragStop}>\n//           <ScrollMenu\n//             // LeftArrow={LeftArrow}\n//             // RightArrow={RightArrow}\n//             // onWheel={onWheel}\n//             onMouseDown={() => dragStart}\n//             onMouseUp={() => dragStop}\n//             onMouseMove={handleDrag}\n//           >\n//             {items.map(({ id }) => (\n//               <Card\n//                 title={id}\n//                 itemId={id} // NOTE: itemId is required for track items\n//                 key={id}\n//                 onClick={handleItemClick(id)}\n//                 selected={id === selected}\n//               />\n//             ))}\n//           </ScrollMenu>\n//         </div>\n//         <Footer />\n//       </div>\n//     </>\n//   );\n// }"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAO,sBAAP,C,wFAkBA,GAAMC,MAAK,CAAG,QAARA,MAAQ,MAGT,IAFAC,KAEA,MAFAA,IAEA,CAFMC,KAEN,MAFMA,KAEN,CACD,mBACI,oCACI,UAAG,SAAS,CAAC,WAAb,UAA0BD,IAA1B,EADJ,cAGI,YAAK,GAAG,CAAC,mBAAT,CAA6B,GAAG,CAAC,OAAjC,EAHJ,GADJ,CAQH,CAZD,CAcA,cAAeD,MAAf,CAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}